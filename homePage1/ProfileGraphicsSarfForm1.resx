<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8G1xmLJ1I9mATuBY6A8h4QhO8eq5r//Z
</value>
  </data>
</root>