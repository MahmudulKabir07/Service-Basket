<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Ykk2uTrkLD0AgQD/2Q==
</value>
  </data>
</root>